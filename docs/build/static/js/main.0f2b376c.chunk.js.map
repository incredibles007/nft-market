{"version":3,"sources":["state/reducer.ts","layout/App.tsx","state/state.tsx","utils/fetchers.ts","utils/listTokensFrom.ts","utils/index.ts","components/Token/Token.tsx","components/Header/Header.tsx","actions/updateUser.ts","actions/getContract.ts","components/Profile/Profile.tsx","components/Gallery/Gallery.tsx","components/MetamaskLogin/MetamaskLogin.tsx","components/UserMenu/UserMenu.tsx","connectors/index.ts","hooks/web3.ts","components/PrivateRoute/PrivateRoute.tsx","layout/Root.tsx","layout/Profile.tsx","reportWebVitals.ts","theme/index.ts","index.tsx"],"names":["ActionType","ConnectorNames","reducer","state","action","type","ETH_PRICE","ethPrice","payload","UPDATE_USER","isAuthenticated","user","SIGN_OUT","console","log","undefined","LOAD_TOKEN_SALE","tokensOnSale","CONTRACT","contract","Error","defaultState","myContext","createContext","dispatch","useStateContext","useContext","StateProvider","children","useReducer","Provider","value","fetcherETHUSD","url","fetch","then","r","json","result","ethusd","fetcherMetadata","listTokensFrom","address","Promise","resolve","reject","a","ownedTokensEvents","filters","Transfer","queryFilter","results","reduce","acc","current","accumulator","ownerOf","args","tokenId","tokenMeta","id","name","price","tokenURI","uri","push","all","ownedTokens","process","REACT_APP_APIETHERSCAN","REACT_APP_SERVICE_URL","ETHSCAN_API","METADATA_API","Token","token","isOnSale","onTransfer","onBuy","onSale","useState","transfer","setTransfer","onSaleActive","setOnSale","setAddress","setPrice","onTransferClick","e","preventDefault","utils","isAddress","onSaleClick","parseEther","data","useSWR","tokenPriceEth","Intl","NumberFormat","style","currency","format","Number","formatEther","variant","sx","width","bg","borderBottom","src","image","p","pt","as","color","fontSize","fontWeight","m","constants","EtherSymbol","toFixed","target","href","details","mt","justifyContent","onSubmit","flexDirection","onChange","currentTarget","placeholder","onClick","ml","opacity","find","formatUnits","pointerEvents","Header","history","useHistory","alignItems","cursor","updateUser","userAccount","library","getBalance","balance","getContract","chainId","networkid","deployedNetwork","LVR","networks","String","Contract","abi","getSigner","symbol","Profile","useWeb3React","onConfirmTransfer","onTransferToken","from","tx","wait","confirmations","onSaleToken","setTokenSale","columns","gap","my","length","map","t","index","Gallery","onBuyToken","purchaseToken","receipt","loadTokensForSale","useCallback","getAllOnSale","tokensForSale","b","onBuyTokenClick","useEffect","i","MetamaskLogin","onClickConnect","maxWidth","px","py","height","mr","UserMenu","justifySelf","borderRadius","dangerouslySetInnerHTML","__html","toSvg","POLLING_INTERVAL","RPC_URLS","injected","InjectedConnector","supportedChainIds","walletconnect","NetworkConnector","urls","1337","defaultChainId","WalletConnectConnector","rpc","1","bridge","qrcode","pollingInterval","WalletLinkConnector","appName","LedgerConnector","TrezorConnector","manifestEmail","manifestAppUrl","LatticeConnector","FrameConnector","AuthereumConnector","TorusConnector","connectorsByName","Injected","WalletConnect","App","connector","account","activate","setError","error","signInUser","signMessage","activatingConnector","setActivatingConnector","triedEager","active","tried","setTried","isAuthorized","catch","useEagerConnect","suppress","deactivate","ethereum","window","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","addListener","removeListener","useInactiveListener","Object","keys","currentConnector","activating","connected","disabled","borderColor","position","top","left","display","margin","role","aria-label","PrivateRoute","Component","component","path","render","props","to","getLibrary","provider","Web3Provider","Root","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","breakpoints","space","fontSizes","fonts","body","heading","layout","container","pb","sizes","header","button","logo","sidemenu","chart","cards","nft","border","textAlign","links","openSea","content","transition","filter","buttons","primary","fontFamily","lineHeight","paddingX","paddingY","outline","whiteSpace","minWidth","secondary","tertiary","quartiary","fontWeights","bold","lineHeights","subheading","colors","text","white","background","gray","lightGray","midGray","lightBlue","navy","green","amber","red","muted","transparent","white20","black66","divider","forms","input","paragraph","letterSpacing","h1","h2","h3","h4","h5","styles","root","hr","ReactDOM","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.0f2b376c.chunk.js","sourcesContent":["import { TokenProps } from '../components/Token'\nimport { ContractProps, UserProps } from '../types'\nimport { StateContext } from './state'\n\nexport enum ActionType {\n  UPDATE_USER = 'Update User',\n  SIGN_OUT = 'Sign out',\n  CONTRACT = 'Contract',\n  LOAD_TOKEN_SALE = 'Load tokens on Sale',\n  ETH_PRICE = 'Eth price',\n}\n\nexport type Action =\n  | { type: ActionType.ETH_PRICE; payload: string }\n  | { type: ActionType.CONTRACT; payload: ContractProps }\n  | { type: ActionType.UPDATE_USER; payload: UserProps }\n  | { type: ActionType.SIGN_OUT; payload?: any }\n  | { type: ActionType.LOAD_TOKEN_SALE; payload?: TokenProps[] }\n\nexport const reducer = (state: StateContext, action: Action) => {\n  switch (action.type) {\n    case ActionType.ETH_PRICE:\n      return { ...state, ethPrice: action.payload }\n    case ActionType.UPDATE_USER:\n      return { ...state, isAuthenticated: true, user: action.payload }\n    case ActionType.SIGN_OUT:\n      console.log('asdasdasd')\n\n      return { ...state, isAuthenticated: false, user: undefined }\n\n    case ActionType.LOAD_TOKEN_SALE:\n      return { ...state, tokensOnSale: action.payload }\n\n    case ActionType.CONTRACT:\n      return { ...state, contract: action.payload }\n\n    default:\n      throw new Error('Not among actions')\n  }\n}\n","import {\n  useEffect,\n  useState,\n  // useCallback\n} from 'react'\nimport {\n  // Heading,\n  Container,\n  Grid,\n  Button,\n  Spinner,\n} from 'theme-ui'\nimport useSWR from 'swr'\n\nimport { Gallery, MetamaskLogin } from '../components'\nimport { ActionType, useStateContext } from '../state'\nimport { getContract, updateUser } from '../actions'\nimport {\n  // UnsupportedChainIdError,\n  useWeb3React,\n} from '@web3-react/core'\n\n// import {\n//   NoEthereumProviderError,\n//   UserRejectedRequestError as UserRejectedRequestErrorInjected,\n// } from '@web3-react/injected-connector'\n// import { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\n// import { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\n\nimport { useEagerConnect, useInactiveListener } from '../hooks/web3'\n\nimport {\n  injected,\n  // network,\n  walletconnect,\n  // walletlink,\n  // ledger,\n  // trezor,\n  // lattice,\n  // frame,\n  // authereum,\n  // fortmatic,\n  // magic,\n  // portis,\n  // torus,\n} from '../connectors'\nimport { ETHSCAN_API } from '../utils'\nimport { fetcherETHUSD } from '../utils/fetchers'\n\nenum ConnectorNames {\n  Injected = 'Injected',\n  // Network = 'Network',\n  WalletConnect = 'WalletConnect',\n  // WalletLink = 'WalletLink',\n  // Ledger = 'Ledger',\n  // Trezor = 'Trezor',\n  // Lattice = 'Lattice',\n  // Frame = 'Frame',\n  // Authereum = 'Authereum',\n  // Fortmatic = 'Fortmatic',\n  // Magic = 'Magic',\n  // Portis = 'Portis',\n  // Torus = 'Torus',\n}\n\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  // [ConnectorNames.Network]: network,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  // [ConnectorNames.WalletLink]: walletlink,\n  // [ConnectorNames.Ledger]: ledger,\n  // [ConnectorNames.Trezor]: trezor,\n  // [ConnectorNames.Lattice]: lattice,\n  // [ConnectorNames.Frame]: frame,\n  // [ConnectorNames.Authereum]: authereum,\n  // [ConnectorNames.Fortmatic]: fortmatic,\n  // [ConnectorNames.Magic]: magic,\n  // [ConnectorNames.Portis]: portis,\n  // [ConnectorNames.Torus]: torus,\n}\n\n// function getErrorMessage(error: Error) {\n//   if (error instanceof NoEthereumProviderError) {\n//     return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n//   } else if (error instanceof UnsupportedChainIdError) {\n//     return \"You're connected to an unsupported network.\"\n//   } else if (\n//     error instanceof UserRejectedRequestErrorInjected ||\n//     error instanceof UserRejectedRequestErrorWalletConnect ||\n//     error instanceof UserRejectedRequestErrorFrame\n//   ) {\n//     return 'Please authorize this website to access your Ethereum account.'\n//   } else {\n//     console.error(error)\n//     return 'An unknown error occurred. Check the console for more details.'\n//   }\n// }\n\nconst App = () => {\n  const { dispatch, state } = useStateContext()\n  const {\n    connector,\n    library,\n    chainId,\n    account,\n    activate,\n    // deactivate,\n    setError,\n    error,\n  } = useWeb3React()\n\n  const { data: ethPrice } = useSWR(ETHSCAN_API, fetcherETHUSD)\n\n  console.log(account)\n\n  useEffect(() => {\n    dispatch({ type: ActionType.ETH_PRICE, payload: ethPrice })\n  }, [ethPrice, dispatch])\n\n  const signInUser = async () => {\n    if (!account) throw new Error('No Account found')\n    if (!chainId) throw new Error('No chainId')\n    try {\n      await library.getSigner(account).signMessage('👋')\n      const contract = await getContract({ dispatch, library, chainId })\n      await updateUser({ contract, userAccount: account, library, dispatch })\n    } catch (e) {\n      setError(e)\n    }\n  }\n\n  const [activatingConnector, setActivatingConnector] = useState<any>()\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n    <Container>\n      {!state.user ? (\n        <>\n          <Grid gap=\"1rem\" columns=\"1fr 1fr\">\n            {Object.keys(connectorsByName).map((name: string) => {\n              //@ts-ignore\n              const currentConnector = connectorsByName[name]\n              const activating = currentConnector === activatingConnector\n              const connected = currentConnector === connector\n              const disabled = !triedEager || !!activatingConnector || connected || !!error\n\n              return (\n                <Button\n                  mt={2}\n                  variant=\"tertiary\"\n                  sx={{\n                    borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n                    position: 'relative',\n                  }}\n                  disabled={disabled}\n                  key={name}\n                  onClick={() => {\n                    setActivatingConnector(currentConnector)\n                    //@ts-ignore\n                    activate(connectorsByName[name])\n                  }}\n                >\n                  <div\n                    style={{\n                      position: 'absolute',\n                      top: '0',\n                      left: '0',\n                      height: '100%',\n                      display: 'flex',\n                      alignItems: 'center',\n                      color: 'black',\n                      margin: '0 0 0 1rem',\n                    }}\n                  >\n                    {activating && <Spinner />}\n                    {connected && (\n                      <span role=\"img\" aria-label=\"check\">\n                        ✅\n                      </span>\n                    )}\n                  </div>\n                  {name}\n                </Button>\n              )\n            })}\n          </Grid>\n          {!!(library && account) && connector === connectorsByName.Injected && (\n            <MetamaskLogin onClickConnect={signInUser} />\n          )}\n        </>\n      ) : (\n        <Gallery />\n      )}\n    </Container>\n  )\n}\n\nexport default App\n","import { createContext, FC, Reducer, useContext, useReducer } from 'react'\nimport { TokenProps } from '../components/Token'\nimport { ContractProps, UserProps } from '../types'\n\nimport { reducer, Action } from './reducer'\n\nexport interface StateContext {\n  isAuthenticated: boolean\n  contract?: ContractProps\n  user?: UserProps\n  tokensOnSale?: TokenProps[]\n  ethPrice?: string\n}\nexport interface Store {\n  state: StateContext\n  dispatch: React.Dispatch<Action>\n}\n\nconst defaultState: StateContext = {\n  isAuthenticated: false,\n}\n\nconst myContext = createContext<Store>({ state: defaultState, dispatch: () => {} })\n\nexport const useStateContext = () => useContext(myContext)\n\nexport const StateProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer<Reducer<StateContext, Action>>(reducer, defaultState)\n  return <myContext.Provider value={{ state, dispatch }} children={children} />\n}\n","export const fetcherETHUSD = (url: string) =>\n  fetch(url).then(r => r.json().then(r => r.result.ethusd))\n\nexport const fetcherMetadata = (url: string) => fetch(url).then(r => r.json())\n","import { Contract, Event } from 'ethers'\nimport { TokenProps } from '../components/Token'\n\nconst listTokensFrom = (contract: Contract, address: string) =>\n  new Promise<TokenProps[]>(async (resolve, reject) => {\n    if (!contract || !address) reject('Contract or address not found')\n\n    try {\n      const ownedTokensEvents = contract.filters.Transfer(null, address)\n      const results: Event[] = await contract.queryFilter(ownedTokensEvents, 0, 'latest')\n\n      const ownedTokens: TokenProps[] = await Promise.all(\n        await results.reduce(async (acc: Promise<TokenProps[]>, current: Event) => {\n          const accumulator = await acc\n\n          const ownerToken = await contract.ownerOf(current.args?.tokenId)\n\n          if (ownerToken === address) {\n            const { id, name, price } = await contract.tokenMeta(current.args?.tokenId)\n            const uri = await contract.tokenURI(current.args?.tokenId)\n\n            accumulator.push({\n              id,\n              name,\n              price,\n              uri,\n            })\n          }\n\n          return accumulator\n        }, Promise.resolve([] as TokenProps[]))\n      )\n\n      resolve(ownedTokens)\n    } catch (e) {\n      reject(e)\n    }\n  })\n\nexport default listTokensFrom\n","const { REACT_APP_APIETHERSCAN, REACT_APP_SERVICE_URL } = process.env\n\nexport { default as listTokensFrom } from './listTokensFrom'\n\nexport const ETHSCAN_API = `https://api.etherscan.io/api?module=stats&action=ethprice&apikey=${REACT_APP_APIETHERSCAN}`\n\nexport const METADATA_API = REACT_APP_SERVICE_URL || ''\n","import { FormEvent, MouseEvent, useState } from 'react'\nimport { utils, BigNumber, constants } from 'ethers'\nimport {\n  Spinner,\n  Box,\n  Flex,\n  Card,\n  Button,\n  Image,\n  Input,\n  Text,\n  Heading,\n  Divider,\n  NavLink,\n} from 'theme-ui'\nimport useSWR from 'swr'\nimport { useStateContext } from '../../state'\nimport { fetcherMetadata } from '../../utils/fetchers'\nimport { METADATA_API } from '../../utils'\n\nexport type TokenProps = {\n  id: string\n  uri: string\n  price: BigNumber\n  name: string\n}\n\nexport type TokenCompProps = {\n  token: TokenProps\n  isOnSale?: boolean\n  onTransfer?({ id, address }: { id: string; address: string }): Promise<boolean>\n  onBuy?({ id, price }: { id: string; price: BigNumber }): void\n  onSale?({\n    id,\n    price,\n    onSale,\n  }: {\n    id: string\n    price: BigNumber\n    onSale?: boolean\n  }): Promise<boolean>\n}\n\nconst Token = ({ token, isOnSale, onTransfer, onBuy, onSale }: TokenCompProps) => {\n  const [transfer, setTransfer] = useState<boolean>(false)\n  const [onSaleActive, setOnSale] = useState<boolean>(false)\n  const [address, setAddress] = useState<string>('')\n  const [price, setPrice] = useState<string>('')\n  const {\n    state: { user, ethPrice, contract },\n  } = useStateContext()\n\n  const onTransferClick = async (e: FormEvent | MouseEvent) => {\n    e.preventDefault()\n    try {\n      if (utils.isAddress(address) && onTransfer) {\n        const result = await onTransfer({ id: token.id, address })\n        if (result) {\n          setOnSale(false)\n        }\n      }\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n\n  const onBuyClick = (e: MouseEvent) => {\n    e.preventDefault()\n    onBuy && onBuy({ id: token.id, price: token.price })\n  }\n\n  const onSaleClick = async (e: MouseEvent) => {\n    e.preventDefault()\n    if (!onSale) return\n    try {\n      const result = await onSale({ id: token.id, price: utils.parseEther(price), onSale: true })\n      if (result) {\n        setOnSale(false)\n      }\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n\n  const { data } = useSWR(`${METADATA_API}/token?id=${token.id}`, fetcherMetadata)\n\n  const tokenPriceEth = new Intl.NumberFormat('us-GB', {\n    style: 'currency',\n    currency: 'USD',\n  }).format(Number(utils.formatEther(token.price)) * Number(ethPrice))\n\n  if (!data)\n    return (\n      <Card variant=\"nft\">\n        <Spinner />\n      </Card>\n    )\n\n  return (\n    <Card variant=\"nft\">\n      <Image\n        sx={{ width: '100%', bg: 'white', borderBottom: '1px solid black' }}\n        src={data.image}\n      />\n      <Box p={3} pt={2}>\n        <Heading as=\"h2\">{data.name}</Heading>\n        <Divider variant=\"divider.nft\" />\n        <Box>\n          <Text sx={{ color: 'lightBlue', fontSize: 1, fontWeight: 'bold' }}>Price</Text>\n          <Heading as=\"h3\" sx={{ color: 'green', m: 0, fontWeight: 'bold' }}>\n            {constants.EtherSymbol} {Number(utils.formatEther(token.price)).toFixed(2)}{' '}\n            <Text sx={{ color: 'navy' }} as=\"span\" variant=\"text.body\">\n              ({tokenPriceEth})\n            </Text>\n          </Heading>\n          <NavLink\n            target=\"_blank\"\n            href={`https://testnets.opensea.io/assets/${contract?.details.address}/${token.id}`}\n            variant=\"openSea\"\n          >\n            View on Opensea.io\n          </NavLink>\n        </Box>\n\n        {onTransfer && (\n          <Flex mt={3} sx={{ justifyContent: 'center' }}>\n            {transfer && (\n              <Box sx={{ width: '100%' }}>\n                <Flex\n                  onSubmit={onTransferClick}\n                  sx={{ width: '100%', flexDirection: 'column' }}\n                  as=\"form\"\n                >\n                  <Input\n                    onChange={e => setAddress(e.currentTarget.value)}\n                    placeholder=\"ETH Address 0x0...\"\n                  />\n                </Flex>\n                <Flex mt={2}>\n                  <Button sx={{ bg: 'green' }} onClick={onTransferClick} variant=\"quartiary\">\n                    Confirm\n                  </Button>\n                  <Button\n                    sx={{ bg: 'red' }}\n                    ml={2}\n                    onClick={() => setTransfer(false)}\n                    variant=\"quartiary\"\n                  >\n                    Cancel\n                  </Button>\n                </Flex>\n              </Box>\n            )}\n            {onSaleActive && (\n              <Box sx={{ width: '100%' }}>\n                <Flex\n                  onSubmit={onTransferClick}\n                  sx={{ width: '100%', flexDirection: 'column' }}\n                  as=\"form\"\n                >\n                  <Input\n                    onChange={e => setPrice(e.currentTarget.value)}\n                    placeholder=\"Token Price in ETH\"\n                  />\n                </Flex>\n                <Flex mt={2}>\n                  <Button sx={{ bg: 'green' }} onClick={onSaleClick} variant=\"quartiary\">\n                    Confirm\n                  </Button>\n                  <Button\n                    sx={{ bg: 'red' }}\n                    ml={2}\n                    onClick={() => setOnSale(false)}\n                    variant=\"quartiary\"\n                  >\n                    Cancel\n                  </Button>\n                </Flex>\n              </Box>\n            )}\n            {!transfer && !onSaleActive && (\n              <Flex sx={{ flexDirection: 'column', width: '100%', justifyContent: 'center' }}>\n                <Button onClick={() => setTransfer(!transfer)} variant=\"tertiary\">\n                  Transfer\n                </Button>\n                {isOnSale ? (\n                  <Button\n                    mt={2}\n                    onClick={() =>\n                      onSale &&\n                      onSale({\n                        id: token.id,\n                        price: token.price,\n                        onSale: false,\n                      })\n                    }\n                    variant=\"tertiary\"\n                  >\n                    Remove from Sale\n                  </Button>\n                ) : (\n                  <Button mt={2} onClick={() => setOnSale(!onSaleActive)} variant=\"tertiary\">\n                    Put Token for Sale\n                  </Button>\n                )}\n              </Flex>\n            )}\n          </Flex>\n        )}\n        {onBuy && (\n          <Flex mt={3} sx={{ justifyContent: 'center', width: '100%' }}>\n            <Button\n              sx={{\n                opacity: !!user?.ownedTokens.find(\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\n                )\n                  ? 0.5\n                  : 1,\n                pointerEvents: !!user?.ownedTokens.find(\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\n                )\n                  ? 'none'\n                  : 'visible',\n              }}\n              onClick={onBuyClick}\n              variant=\"quartiary\"\n            >\n              Buy Token\n            </Button>\n          </Flex>\n        )}\n      </Box>\n    </Card>\n  )\n}\n\nexport default Token\n","import { useHistory } from 'react-router'\nimport { Flex, Heading, Image } from 'theme-ui'\nimport { UserMenu } from '..'\n\nexport type HeaderProps = {\n  //\n}\n\nconst Header = () => {\n  const history = useHistory()\n  return (\n    <Flex sx={{ alignItems: 'center', bg: 'black', p: 3 }} as=\"nav\">\n      <Image\n        onClick={() => {\n          history.push('/')\n        }}\n        sx={{ width: 50, cursor: 'pointer' }}\n        src=\"/static/logo.png\"\n      />\n      <Heading sx={{ ml: 2, color: 'white' }} as=\"h4\">\n        ERC721 Marketplace + OpenSea.io on Rinkeby Network\n      </Heading>\n      <UserMenu />\n    </Flex>\n  )\n}\n\nexport default Header\n","import { utils } from 'ethers'\nimport { ActionProps } from '.'\nimport { ActionType } from '../state'\nimport listTokensFrom from '../utils/listTokensFrom'\n\ntype Props = ActionProps<{\n  userAccount: string\n  contract: any\n}>\n\nconst updateUser = async ({ contract, userAccount, library, dispatch }: Props) => {\n  try {\n    const balance = utils.formatEther(await library.getBalance(userAccount))\n    const ownedTokens = await listTokensFrom(contract, userAccount)\n\n    dispatch({\n      type: ActionType.UPDATE_USER,\n      payload: {\n        address: userAccount,\n        balance,\n        ownedTokens,\n      },\n    })\n  } catch (e) {\n    console.log(e)\n    throw new Error(e)\n  }\n}\n\nexport default updateUser\n","import { ActionProps } from '.'\nimport LVR from '../contracts/LVR.json'\nimport { Contract } from 'ethers'\nimport { ActionType } from '../state'\n\ntype Props = ActionProps<{\n  chainId: number\n}>\n\nconst getContract = async ({ dispatch, library, chainId }: Props) => {\n  if (!library) throw new Error('No Web3 Found')\n\n  const networkid = (id: number) => {\n    switch (id) {\n      case 1337:\n        return 5777\n      default:\n        return id\n    }\n  }\n\n  try {\n    const deployedNetwork = LVR.networks[String(networkid(chainId)) as keyof typeof LVR.networks]\n\n    if (!deployedNetwork) {\n      throw new Error('The network you selected is no supported yet.')\n    }\n\n    const { address } = deployedNetwork\n    const contract = new Contract(address, LVR.abi, library.getSigner())\n\n    const name = await contract.name()\n    const symbol = await contract.symbol()\n\n    dispatch({\n      type: ActionType.CONTRACT,\n      payload: {\n        payload: contract,\n        details: {\n          address,\n          name,\n          symbol,\n        },\n      },\n    })\n\n    return contract\n  } catch (e) {\n    console.log(e)\n    throw new Error(e)\n  }\n}\n\nexport default getContract\n","import { useWeb3React } from '@web3-react/core'\nimport { utils, BigNumber } from 'ethers'\nimport { Text, Box, Heading, Grid, Divider } from 'theme-ui'\nimport { Token } from '..'\nimport { updateUser } from '../../actions'\nimport { useStateContext } from '../../state'\n\nexport type ProfileProps = {}\n\nconst Profile = () => {\n  const { state, dispatch } = useStateContext()\n  const { contract, user, tokensOnSale } = state\n  const { library } = useWeb3React()\n\n  if (!user) return null\n\n  const { address, balance, ownedTokens } = user\n\n  const onConfirmTransfer = async (): Promise<boolean> => {\n    if (!user || !user.address || !library) return false\n    try {\n      await updateUser({\n        contract: contract?.payload,\n        userAccount: user.address,\n        library,\n        dispatch,\n      })\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  const onTransferToken = async ({\n    id,\n    address,\n  }: {\n    id: string\n    address: string\n  }): Promise<boolean> => {\n    if (!contract?.payload) return false\n\n    try {\n      const tx = await contract.payload['safeTransferFrom(address,address,uint256)'](\n        user.address,\n        address,\n        id,\n        {\n          from: user.address,\n        }\n      )\n      const receipt = await tx.wait()\n      if (receipt.confirmations >= 1) {\n        return onConfirmTransfer()\n      } else {\n        return false\n      }\n    } catch (e) {\n      console.log(e)\n      return false\n    }\n  }\n\n  const onSaleToken = async ({\n    id,\n    price,\n    onSale = true,\n  }: {\n    id: string\n    price: BigNumber\n    onSale?: boolean\n  }): Promise<boolean> => {\n    if (!contract?.payload || !user?.address) return false\n    try {\n      await contract.payload.setTokenSale(id, onSale, price)\n      return await onConfirmTransfer()\n    } catch (e) {\n      console.log(e)\n      return false\n    }\n  }\n\n  return (\n    <Box>\n      <Heading as=\"h1\">My Profile</Heading>\n      <Grid columns=\"1fr 1fr\" sx={{ gap: '0 20px' }}>\n        <Heading as=\"h4\" sx={{ color: 'green' }}>\n          Address\n        </Heading>\n        <Heading as=\"h4\" sx={{ color: 'green' }}>\n          Balance\n        </Heading>\n        <Text>{address}</Text>\n        <Text>Ξ {balance}</Text>\n      </Grid>\n      <Divider variant=\"divider.nft\" sx={{ my: 7 }} />\n      <Box my={5}>\n        {ownedTokens && ownedTokens.length > 0 ? (\n          <Box>\n            <Heading as=\"h2\">\n              My items{' '}\n              <Text variant=\"text.body\" as=\"span\">\n                ({ownedTokens.length} item)\n              </Text>\n            </Heading>\n            <Grid gap={4} columns=\"1fr 1fr 1fr\">\n              {ownedTokens.map((t, index) => (\n                <Token\n                  isOnSale={\n                    !!tokensOnSale?.find(a => utils.formatUnits(a.id) === utils.formatUnits(t.id))\n                  }\n                  onSale={onSaleToken}\n                  onTransfer={onTransferToken}\n                  token={t}\n                  key={index}\n                />\n              ))}\n            </Grid>\n          </Box>\n        ) : (\n          ownedTokens && (\n            <Box>\n              <Heading as=\"h2\">You don't own any NFT tokens</Heading>\n            </Box>\n          )\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nexport default Profile\n","import { useWeb3React } from '@web3-react/core'\nimport { BigNumber } from 'ethers'\nimport { useCallback, useEffect } from 'react'\nimport { Box, Grid, Heading } from 'theme-ui'\nimport { updateUser } from '../../actions'\nimport { ActionType, useStateContext } from '../../state'\nimport Token, { TokenProps } from '../Token'\n\nexport type GalleryProps = {}\n\nconst Gallery = () => {\n  const { state, dispatch } = useStateContext()\n  const { library } = useWeb3React()\n  const { contract, user, tokensOnSale } = state\n\n  const onConfirmTransfer = async () => {\n    if (!user || !user.address) return\n    await updateUser({ contract: contract?.payload, userAccount: user.address, library, dispatch })\n  }\n\n  const onBuyToken = async ({ id, price }: { id: string; price: BigNumber }) => {\n    if (!contract?.payload) return\n\n    try {\n      const tx = await contract.payload.purchaseToken(id, { value: price })\n      const receipt = await tx.wait()\n      if (receipt.confirmations >= 1) {\n        onConfirmTransfer()\n      } else {\n        throw new Error(receipt)\n      }\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n\n  const loadTokensForSale = useCallback(async () => {\n    try {\n      const tokensForSale = (await contract?.payload.getAllOnSale()).reduce(\n        (acc: TokenProps[], b: any) => {\n          if (b.uri !== '') {\n            acc.push({ id: b.id, price: b.price, name: b.name, uri: b.uri })\n          }\n\n          return acc\n        },\n        [] as TokenProps[]\n      )\n\n      dispatch({ type: ActionType.LOAD_TOKEN_SALE, payload: tokensForSale })\n    } catch (e) {\n      console.log(e)\n    }\n  }, [dispatch, contract])\n\n  const onBuyTokenClick = ({ id, price }: { id: string; price: BigNumber }) => {\n    onBuyToken && onBuyToken({ id, price })\n  }\n\n  useEffect(() => {\n    loadTokensForSale()\n  }, [loadTokensForSale, user?.ownedTokens])\n\n  return (\n    <Box>\n      <Heading as=\"h1\">Market</Heading>\n      <Grid gap={4} columns=\"1fr 1fr 1fr 1fr\">\n        {tokensOnSale?.map((i, index) => (\n          <Token onBuy={onBuyTokenClick} token={i} key={index} />\n        ))}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Gallery\n","import { Image, Flex, Button } from 'theme-ui'\n\nexport type MetamaskLoginProps = {\n  onClickConnect(): void\n}\n\nconst MetamaskLogin = ({ onClickConnect }: MetamaskLoginProps) => {\n  return (\n    <Flex sx={{ flexDirection: 'column', alignItems: 'center' }}>\n      <Button\n        sx={{ maxWidth: 200, mt: 5, px: 6, py: 4 }}\n        variant=\"primary\"\n        onClick={onClickConnect}\n      >\n        <Image\n          sx={{ width: 35, height: 35 }}\n          mr={3}\n          src=\"https://docs.metamask.io/metamask-fox.svg\"\n        />\n        CONNECT\n      </Button>\n    </Flex>\n  )\n}\n\nexport default MetamaskLogin\n","import { Flex, Heading, Box } from 'theme-ui'\nimport { toSvg } from 'jdenticon'\nimport { useStateContext } from '../../state'\nimport { useHistory } from 'react-router'\n\nexport type UserMenuProps = {\n  //\n}\n\nconst UserMenu = () => {\n  const {\n    state: { user, isAuthenticated },\n  } = useStateContext()\n\n  const history = useHistory()\n\n  return (\n    <Flex sx={{ ml: 'auto', justifySelf: 'flex-end' }}>\n      {isAuthenticated && user && (\n        <>\n          <Heading sx={{ color: 'white' }} as=\"h5\">\n            {user.address}\n          </Heading>\n          <Box\n            onClick={() => {\n              history.push('/profile')\n            }}\n            sx={{\n              cursor: 'pointer',\n              ml: 3,\n              height: 30,\n              width: 30,\n              bg: 'white',\n              borderRadius: '100%',\n            }}\n            dangerouslySetInnerHTML={{ __html: toSvg(user.address, 30) }}\n          />\n        </>\n      )}\n    </Flex>\n  )\n}\n\nexport default UserMenu\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\nimport { LatticeConnector } from '@web3-react/lattice-connector'\nimport { FrameConnector } from '@web3-react/frame-connector'\nimport { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { MagicConnector } from '@web3-react/magic-connector'\n// import { PortisConnector } from '@web3-react/portis-connector'\nimport { TorusConnector } from '@web3-react/torus-connector'\n\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  1: process.env.REACT_APP_RPC_URL_1 as string,\n  4: process.env.REACT_APP_RPC_URL_4 as string,\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1337, 4] })\n\nexport const network = new NetworkConnector({\n  urls: {\n    1337: RPC_URLS[1],\n    // , 4: RPC_URLS[4]\n  },\n  defaultChainId: 1337,\n})\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: RPC_URLS[1] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nexport const walletlink = new WalletLinkConnector({\n  url: RPC_URLS[1],\n  appName: 'NFT-marketplace',\n})\n\nexport const ledger = new LedgerConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n})\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:3000',\n})\n\nexport const lattice = new LatticeConnector({\n  chainId: 4,\n  appName: 'NFT-marketplace',\n  url: RPC_URLS[4],\n})\n\nexport const frame = new FrameConnector({ supportedChainIds: [1] })\n\nexport const authereum = new AuthereumConnector({ chainId: 42 })\n\n// export const fortmatic = new FortmaticConnector({\n//   apiKey: process.env.REACT_APP_FORTMATIC_API_KEY as string,\n//   chainId: 4,\n// })\n\n// export const magic = new MagicConnector({\n//   apiKey: process.env.REACT_APP_MAGIC_API_KEY as string,\n//   chainId: 4,\n//   email: 'hello@example.org',\n// })\n\n// export const portis = new PortisConnector({\n//   dAppId: process.env.REACT_APP_PORTIS_DAPP_ID as string,\n//   networks: [1, 100],\n// })\n\nexport const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../connectors'\nimport { ActionType, useStateContext } from '../state'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate])\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate, deactivate } = useWeb3React()\n  const { dispatch } = useStateContext()\n\n  useEffect(() => {\n    const { ethereum } = window as any\n\n    if (ethereum && ethereum.on && active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"111111 Handling 'chainChanged' event with payload\", chainId)\n        deactivate()\n        dispatch({ type: ActionType.SIGN_OUT })\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"222222 Handling 'accountsChanged' event with payload\", accounts)\n        dispatch({ type: ActionType.SIGN_OUT })\n        if (accounts.length > 0) {\n          deactivate()\n        }\n      }\n\n      ethereum.addListener('connect', handleConnect)\n      ethereum.addListener('chainChanged', handleChainChanged)\n      ethereum.addListener('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate, deactivate, dispatch])\n}\n","import { ElementType } from 'react'\nimport { Redirect } from 'react-router'\nimport { Route } from 'react-router-dom'\nimport { useStateContext } from '../../state'\n\ntype PrivateRouteProps = {\n  component: ElementType\n  path: string\n}\n\nconst PrivateRoute = ({ component: Component, path }: PrivateRouteProps) => {\n  const {\n    state: { isAuthenticated },\n  } = useStateContext()\n\n  return (\n    <Route\n      path={path}\n      render={props => (isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />)}\n    />\n  )\n}\n\nexport default PrivateRoute\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport { App, Profile } from './'\nimport { Header } from '../components'\nimport { PrivateRoute } from '../components/PrivateRoute'\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 12000\n  return library\n}\n\nconst Root = () => {\n  return (\n    <Router>\n      <Header />\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <Switch>\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <Route path=\"/\">\n            <App />\n          </Route>\n        </Switch>\n      </Web3ReactProvider>\n    </Router>\n  )\n}\n\nexport default Root\n","import { Container } from 'theme-ui'\nimport { Profile } from '../components'\n\nconst ProfilePage = () => {\n  return (\n    <Container>\n      <Profile />\n    </Container>\n  )\n}\n\nexport default ProfilePage\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { SxProp, Theme } from 'theme-ui'\n\nconst defaultButton = {\n  border: 0,\n  fontFamily: 'body',\n  fontWeight: 'normal',\n  lineHeight: 'body',\n  fontSize: 2,\n  paddingX: 3,\n  paddingY: 2,\n  outline: 'none',\n  whiteSpace: 'nowrap',\n  cursor: 'pointer',\n  transition: 'all 0.1s ease-out',\n  '&:hover': {\n    opacity: 0.7,\n  },\n} as SxProp\n\nexport const Palette = {\n  text: '#FFF',\n  white: '#fff',\n  background: '#333',\n  primary: '#111',\n  secondary: '#333',\n  gray: '#F7F9FA',\n  lightGray: '#e0e0e0',\n  midGray: '#333',\n  lightBlue: '#EFF7FF',\n  navy: '#e0e0e0',\n  green: 'rgb(99, 255, 203)',\n  amber: '#D58408',\n  red: '#999',\n  muted: '#999',\n  transparent: 'transparent',\n  white20: 'rgba(255, 255, 255, .2)',\n  black66: 'rgba(0, 0, 0, .66)',\n}\n\nexport type PaletteKeys = keyof typeof Palette\n\nexport const Sizes = {\n  header: 60,\n  container: 1020,\n  button: 250,\n  logo: 60,\n  sidemenu: 240,\n  chart: 950,\n}\n\nexport default {\n  breakpoints: ['40em', '52em', '64em'],\n  space: [0, 4, 10, 16, 20, 30, 42, 56, 78, 125, 150],\n  fontSizes: [10, 12, 16, 26, 36, 50, 75],\n  fonts: {\n    body:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    heading: 'inherit',\n  },\n  layout: {\n    container: {\n      py: 4,\n      px: 3,\n      pb: 10,\n    },\n  },\n  sizes: {\n    ...Sizes,\n  },\n  cards: {\n    nft: {\n      bg: 'background',\n      border: '1px solid',\n      borderColor: 'muted',\n      textAlign: 'left',\n    },\n  },\n  links: {\n    openSea: {\n      color: 'green',\n      fontSize: 1,\n      opacity: 0.5,\n      '&:after': {\n        content: `url(\"data:image/svg+xml,%3Csvg width='8' height='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.262 0l2.529 2.524L0 6.314 1.685 8l3.79-3.79L8 6.732V0z' fill='rgb(99, 255, 203)' fill-rule='nonzero' /%3E%3C/svg%3E\")`,\n        ml: 1,\n      },\n      transition: 'all .2s ease-out',\n      '&:hover': {\n        filter: 'brightness(1.2)',\n        color: 'green',\n      },\n    },\n  },\n  buttons: {\n    primary: {\n      ...defaultButton,\n      fontWeight: 'bold',\n      minWidth: 'button',\n      bg: 'primary',\n      color: 'white',\n      textAlign: 'center',\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n\n    secondary: {\n      cursor: 'pointer',\n      variant: 'buttons.primary',\n      bg: 'secondary',\n      fontWeight: 'body',\n    },\n    tertiary: {\n      variant: 'buttons.secondary',\n      color: 'white',\n      bg: 'primary',\n    },\n    quartiary: {\n      variant: 'buttons.tertiary',\n      bg: 'green',\n      color: 'black',\n      minWidth: 'auto',\n      py: 2,\n    },\n  },\n  fontWeights: {\n    heading: 300,\n    body: 400,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.333333333,\n    heading: 1.066666667,\n    subheading: 2,\n  },\n  colors: {\n    ...Palette,\n  },\n  divider: {\n    nft: {\n      color: 'muted',\n      height: 1,\n      my: 2,\n    },\n  },\n  forms: {\n    input: {\n      paddingX: 2,\n      paddingY: 2,\n      borderRadius: '5px',\n      bg: 'white',\n      color: 'primary',\n    },\n  },\n  text: {\n    body: {\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 'body',\n      fontSize: 1,\n    },\n    heading: {\n      py: 2,\n    },\n    bold: {\n      fontWeight: 'bold',\n    },\n    paragraph: {\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 2,\n      fontSize: 2,\n      letterSpacing: 0.44,\n      color: 'white',\n    },\n    h1: {\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 6,\n      letterSpacing: -0.44,\n    },\n    h2: {\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 5,\n      letterSpacing: -0.44,\n    },\n    h3: {\n      fontFamily: 'heading',\n      lineHeight: 'subheading',\n      fontWeight: 'heading',\n      fontSize: 3,\n    },\n    h4: {\n      fontFamily: 'heading',\n      lineHeight: 'subheading',\n      fontWeight: 'bold',\n      fontSize: 2,\n    },\n    h5: {\n      fontFamily: 'heading',\n      fontWeight: 'bold',\n      lineHeight: 1.6,\n      fontSize: 0,\n      letterSpacing: 1.5,\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n    },\n    a: {\n      color: 'primary',\n      '&:hover': {\n        color: 'inherit',\n      },\n    },\n    hr: {\n      height: 1,\n      opacity: 0.5,\n      bg: 'black',\n      color: 'black',\n      my: 6,\n    },\n  },\n} as Theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'theme-ui'\nimport { Root } from './layout'\nimport reportWebVitals from './reportWebVitals'\nimport { StateProvider } from './state/state'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <StateProvider>\n        <Root />\n      </StateProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}