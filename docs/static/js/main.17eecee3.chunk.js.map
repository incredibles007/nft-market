{"version":3,"sources":["state/reducer.ts","reportWebVitals.ts","connectors/index.ts","state/state.tsx","utils/fetchers.ts","utils/listTokensFrom.ts","utils/toShort.ts","utils/index.ts","components/Token/Token.tsx","components/Header/Header.tsx","actions/updateUser.ts","actions/getContract.ts","actions/updateTokensOnSale.ts","components/Profile/Profile.tsx","components/Gallery/Gallery.tsx","components/UserMenu/UserMenu.tsx","components/PrivateRoute/PrivateRoute.tsx","components/Identicon/Identicon.tsx","layout/App.tsx","layout/Root.tsx","layout/Profile.tsx","layout/Connect.tsx","hooks/web3.ts","theme/index.ts","index.tsx"],"names":["ActionType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ConnectorNames","reducer","state","action","type","ETH_PRICE","ethPrice","payload","SET_CONNECTOR","activatingConnector","UPDATE_USER","isAuthenticated","user","SIGN_OUT","console","log","undefined","LOAD_TOKEN_SALE","tokensOnSale","CONTRACT","contract","Error","defaultState","myContext","createContext","dispatch","useStateContext","useContext","StateProvider","children","useReducer","Provider","value","fetcherETHUSD","url","fetch","r","json","result","ethusd","fetcherMetadata","listTokensFrom","address","Promise","resolve","reject","a","ownedTokensEvents","filters","Transfer","queryFilter","results","ownedTokens","Map","all","map","current","ownerOf","args","tokenId","tokenMeta","id","name","price","tokenURI","uri","set","Array","from","toShort","factor","slice","Math","round","length","substr","process","REACT_APP_APIETHERSCAN","REACT_APP_SERVICE_URL","ETHSCAN_API","METADATA_API","Token","token","isOnSale","onTransfer","onBuy","onSale","useState","transfer","setTransfer","onSaleActive","setOnSale","setAddress","setPrice","onTransferClick","e","preventDefault","utils","isAddress","onSaleClick","parseEther","data","useSWR","tokenPriceEth","Intl","NumberFormat","style","currency","format","Number","formatEther","variant","sx","width","bg","borderBottom","src","image","p","pt","as","color","fontSize","fontWeight","m","constants","EtherSymbol","toFixed","target","href","details","mt","justifyContent","onSubmit","flexDirection","onChange","currentTarget","placeholder","onClick","ml","opacity","find","formatUnits","pointerEvents","Header","history","useHistory","alignItems","push","cursor","updateUser","userAccount","library","getBalance","balance","getContract","chainId","networkid","deployedNetwork","NFTT","networks","String","Contract","abi","getSigner","symbol","updateTokensOnSale","getAllOnSale","tokensForSale","reduce","acc","b","Profile","useWeb3React","onConfirmTransfer","onTransferToken","tx","wait","confirmations","onSaleToken","setTokenSale","columns","gap","my","t","index","Gallery","onBuyToken","purchaseToken","receipt","loadTokensForSale","useCallback","onBuyTokenClick","useEffect","i","UserMenu","justifySelf","textAlign","height","borderRadius","size","PrivateRoute","Component","component","path","render","props","to","Identicon","ref","useRef","innerHTML","appendChild","jazzicon","parseInt","injected","InjectedConnector","supportedChainIds","connectorsByName","Metamask","App","connector","activate","Object","keys","currentConnector","activating","connected","borderColor","position","maxWidth","mr","getLibrary","provider","Web3Provider","pollingInterval","Root","basename","exact","ProfilePage","getErrorMessage","error","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","Connect","account","update","suppress","active","ethereum","window","autoRefreshOnNetworkChange","useInactiveListener","tried","setTried","isAuthorized","catch","useEagerConnect","breakpoints","space","fontSizes","fonts","body","heading","layout","container","py","px","pb","sizes","header","button","logo","sidemenu","chart","cards","nft","border","links","openSea","content","transition","filter","buttons","primary","fontFamily","lineHeight","paddingX","paddingY","outline","whiteSpace","minWidth","display","secondary","tertiary","quartiary","connect","fontWeights","bold","lineHeights","subheading","colors","text","white","background","gray","lightGray","midGray","lightBlue","navy","green","amber","red","muted","transparent","white20","black66","divider","forms","input","paragraph","letterSpacing","h1","h2","h3","h4","h5","styles","root","hr","ReactDOM","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.17eecee3.chunk.js","sourcesContent":["import { TokenProps } from '../components/Token'\nimport { ContractProps, UserProps } from '../types'\nimport { StateContext } from './state'\n\nexport enum ActionType {\n  UPDATE_USER = 'Update User',\n  SIGN_OUT = 'Sign out',\n  CONTRACT = 'Contract',\n  LOAD_TOKEN_SALE = 'Load tokens on Sale',\n  ETH_PRICE = 'Eth price',\n  SET_CONNECTOR = 'Set Connector',\n}\n\nexport type Action =\n  | { type: ActionType.ETH_PRICE; payload: string }\n  | { type: ActionType.CONTRACT; payload: ContractProps }\n  | { type: ActionType.UPDATE_USER; payload: UserProps }\n  | { type: ActionType.SIGN_OUT; payload?: any }\n  | { type: ActionType.SET_CONNECTOR; payload?: any }\n  | { type: ActionType.LOAD_TOKEN_SALE; payload?: TokenProps[] }\n\nexport const reducer = (state: StateContext, action: Action) => {\n  switch (action.type) {\n    case ActionType.ETH_PRICE:\n      return { ...state, ethPrice: action.payload }\n    case ActionType.SET_CONNECTOR:\n      return { ...state, activatingConnector: action.payload }\n    case ActionType.UPDATE_USER:\n      return { ...state, isAuthenticated: true, user: action.payload }\n    case ActionType.SIGN_OUT:\n      console.log('asdasdasd')\n\n      return { ...state, isAuthenticated: false, user: undefined }\n\n    case ActionType.LOAD_TOKEN_SALE:\n      return { ...state, tokensOnSale: action.payload }\n\n    case ActionType.CONTRACT:\n      return { ...state, contract: action.payload }\n\n    default:\n      throw new Error('Not among actions')\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { InjectedConnector } from '@web3-react/injected-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\n// import { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\n// import { LedgerConnector } from '@web3-react/ledger-connector'\n// import { TrezorConnector } from '@web3-react/trezor-connector'\n// import { LatticeConnector } from '@web3-react/lattice-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// // import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// // import { MagicConnector } from '@web3-react/magic-connector'\n// // import { PortisConnector } from '@web3-react/portis-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nexport enum ConnectorNames {\n  Metamask = 'Metamask',\n  // WalletConnect = 'WalletConnect',\n}\n\n// const POLLING_INTERVAL = 12000\n// const RPC_URLS: { [chainId: number]: string } = {\n//   1: process.env.REACT_APP_RPC_URL_1 as string,\n//   4: process.env.REACT_APP_RPC_URL_4 as string,\n// }\n\nexport const injected = new InjectedConnector({ supportedChainIds: [5777, 1337, 4] })\n\n// export const network = new NetworkConnector({\n//   urls: {\n//     1337: RPC_URLS[1],\n//     4: RPC_URLS[4],\n//   },\n//   defaultChainId: 1337,\n// })\n\n// export const walletconnect = new WalletConnectConnector({\n//   rpc: { 4: RPC_URLS[4] },\n//   bridge: 'https://bridge.walletconnect.org',\n//   qrcode: true,\n//   pollingInterval: POLLING_INTERVAL,\n// })\n\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'NFT-marketplace',\n// })\n\n// export const ledger = new LedgerConnector({\n//   chainId: 1,\n//   url: RPC_URLS[1],\n//   pollingInterval: POLLING_INTERVAL,\n// })\n\n// export const trezor = new TrezorConnector({\n//   chainId: 1,\n//   url: RPC_URLS[1],\n//   pollingInterval: POLLING_INTERVAL,\n//   manifestEmail: 'dummy@abc.xyz',\n//   manifestAppUrl: 'http://localhost:3000',\n// })\n\n// export const lattice = new LatticeConnector({\n//   chainId: 4,\n//   appName: 'NFT-marketplace',\n//   url: RPC_URLS[4],\n// })\n\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n\n// export const fortmatic = new FortmaticConnector({\n//   apiKey: process.env.REACT_APP_FORTMATIC_API_KEY as string,\n//   chainId: 4,\n// })\n\n// export const magic = new MagicConnector({\n//   apiKey: process.env.REACT_APP_MAGIC_API_KEY as string,\n//   chainId: 4,\n//   email: 'hello@example.org',\n// })\n\n// export const portis = new PortisConnector({\n//   dAppId: process.env.REACT_APP_PORTIS_DAPP_ID as string,\n//   networks: [1, 100],\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Metamask]: injected,\n  // [ConnectorNames.Network]: network,\n  // [ConnectorNames.WalletConnect]: walletconnect,\n  // [ConnectorNames.WalletLink]: walletlink,\n  // [ConnectorNames.Ledger]: ledger,\n  // [ConnectorNames.Trezor]: trezor,\n  // [ConnectorNames.Lattice]: lattice,\n  // [ConnectorNames.Frame]: frame,\n  // [ConnectorNames.Authereum]: authereum,\n  // [ConnectorNames.Fortmatic]: fortmatic,\n  // [ConnectorNames.Magic]: magic,\n  // [ConnectorNames.Portis]: portis,\n  // [ConnectorNames.Torus]: torus,\n}\n","import { createContext, FC, Reducer, useContext, useReducer } from 'react'\nimport { TokenProps } from '../components/Token'\nimport { ContractProps, UserProps } from '../types'\n\nimport { reducer, Action } from './reducer'\n\nexport interface StateContext {\n  isAuthenticated: boolean\n  contract?: ContractProps\n  user?: UserProps\n  tokensOnSale?: TokenProps[]\n  ethPrice?: string\n  activatingConnector?: any\n}\nexport interface Store {\n  state: StateContext\n  dispatch: React.Dispatch<Action>\n}\n\nconst defaultState: StateContext = {\n  isAuthenticated: false,\n}\n\nconst myContext = createContext<Store>({ state: defaultState, dispatch: () => {} })\n\nexport const useStateContext = () => useContext(myContext)\n\nexport const StateProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer<Reducer<StateContext, Action>>(reducer, defaultState)\n  return <myContext.Provider value={{ state, dispatch }} children={children} />\n}\n","export const fetcherETHUSD = (url: string) =>\n  fetch(url).then(r => r.json().then(r => r.result.ethusd))\n\nexport const fetcherMetadata = (url: string) => fetch(url).then(r => r.json())\n","import { Contract, Event } from 'ethers'\nimport { TokenProps } from '../components/Token'\n\nconst listTokensFrom = (contract: Contract, address: string) =>\n  new Promise<TokenProps[]>(async (resolve, reject) => {\n    if (!contract || !address) reject('Contract or address not found')\n\n    try {\n      const ownedTokensEvents = contract.filters.Transfer(null, address)\n      const results: Event[] = await contract.queryFilter(ownedTokensEvents, 0, 'latest')\n\n      const ownedTokens: Map<string, TokenProps> = new Map()\n      await Promise.all(\n        results.map(async current => {\n          const ownerToken = await contract.ownerOf(current.args?.tokenId)\n\n          if (ownerToken === address) {\n            const { id, name, price } = await contract.tokenMeta(current.args?.tokenId)\n            const uri = await contract.tokenURI(current.args?.tokenId)\n\n            ownedTokens.set(uri, {\n              id,\n              name,\n              price,\n              uri,\n            })\n          }\n        })\n      )\n\n      resolve(Array.from(ownedTokens).map(([_, token]) => token))\n    } catch (e) {\n      reject(e)\n    }\n  })\n\nexport default listTokensFrom\n","const toShort = (value: string, factor: number = 5) => {\n  const slice = Math.round(value.length / factor)\n  return `${value.substr(0, slice)}...${value.substr(value.length - slice, value.length)}`\n}\n\nexport default toShort\n","const { REACT_APP_APIETHERSCAN, REACT_APP_SERVICE_URL } = process.env\n\nexport const ETHSCAN_API = `https://api.etherscan.io/api?module=stats&action=ethprice&apikey=${REACT_APP_APIETHERSCAN}`\nexport const METADATA_API = REACT_APP_SERVICE_URL || ''\n\nexport { default as listTokensFrom } from './listTokensFrom'\nexport { default as toShort } from './toShort'\n","import { FormEvent, MouseEvent, useState } from 'react'\nimport { utils, BigNumber, constants } from 'ethers'\nimport {\n  Spinner,\n  Box,\n  Flex,\n  Card,\n  Button,\n  Image,\n  Input,\n  Text,\n  Heading,\n  Divider,\n  NavLink,\n} from 'theme-ui'\nimport useSWR from 'swr'\nimport { useStateContext } from '../../state'\nimport { fetcherMetadata } from '../../utils/fetchers'\nimport { METADATA_API } from '../../utils'\n\nexport type TokenProps = {\n  id: string\n  uri: string\n  price: BigNumber\n  name: string\n}\n\nexport type TokenCompProps = {\n  token: TokenProps\n  isOnSale?: boolean\n  onTransfer?({ id, address }: { id: string; address: string }): Promise<boolean>\n  onBuy?({ id, price }: { id: string; price: BigNumber }): void\n  onSale?({\n    id,\n    price,\n    onSale,\n  }: {\n    id: string\n    price: BigNumber\n    onSale?: boolean\n  }): Promise<boolean>\n}\n\nconst Token = ({ token, isOnSale, onTransfer, onBuy, onSale }: TokenCompProps) => {\n  const [transfer, setTransfer] = useState<boolean>(false)\n  const [onSaleActive, setOnSale] = useState<boolean>(false)\n  const [address, setAddress] = useState<string>('')\n  const [price, setPrice] = useState<string>('')\n  const {\n    state: { user, ethPrice, contract },\n  } = useStateContext()\n\n  const onTransferClick = async (e: FormEvent | MouseEvent) => {\n    e.preventDefault()\n    try {\n      if (utils.isAddress(address) && onTransfer) {\n        const result = await onTransfer({ id: token.id, address })\n        if (result) {\n          setOnSale(false)\n        }\n      }\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n\n  const onBuyClick = (e: MouseEvent) => {\n    e.preventDefault()\n    onBuy && onBuy({ id: token.id, price: token.price })\n  }\n\n  const onSaleClick = async (e: MouseEvent) => {\n    e.preventDefault()\n    if (!onSale) return\n    try {\n      const result = await onSale({ id: token.id, price: utils.parseEther(price), onSale: true })\n      if (result) {\n        setOnSale(false)\n      }\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n\n  const { data } = useSWR(`${METADATA_API}/token?id=${token.id}`, fetcherMetadata)\n\n  const tokenPriceEth = new Intl.NumberFormat('us-GB', {\n    style: 'currency',\n    currency: 'USD',\n  }).format(Number(utils.formatEther(token.price)) * Number(ethPrice))\n\n  if (!data)\n    return (\n      <Card variant=\"nft\">\n        <Spinner />\n      </Card>\n    )\n\n  return (\n    <Card variant=\"nft\">\n      <Image\n        sx={{ width: '100%', bg: 'white', borderBottom: '1px solid black' }}\n        src={data.image}\n      />\n      <Box p={3} pt={2}>\n        <Heading as=\"h2\">{data.name}</Heading>\n        <Divider variant=\"divider.nft\" />\n        <Box>\n          <Text sx={{ color: 'lightBlue', fontSize: 1, fontWeight: 'bold' }}>Price</Text>\n          <Heading as=\"h3\" sx={{ color: 'green', m: 0, fontWeight: 'bold' }}>\n            {constants.EtherSymbol} {Number(utils.formatEther(token.price)).toFixed(2)}{' '}\n            <Text sx={{ color: 'navy' }} as=\"span\" variant=\"text.body\">\n              ({tokenPriceEth})\n            </Text>\n          </Heading>\n          <NavLink\n            target=\"_blank\"\n            href={`https://testnets.opensea.io/assets/${contract?.details.address}/${token.id}`}\n            variant=\"openSea\"\n          >\n            View on Opensea.io\n          </NavLink>\n        </Box>\n\n        {onTransfer && (\n          <Flex mt={3} sx={{ justifyContent: 'center' }}>\n            {transfer && (\n              <Box sx={{ width: '100%' }}>\n                <Flex\n                  onSubmit={onTransferClick}\n                  sx={{ width: '100%', flexDirection: 'column' }}\n                  as=\"form\"\n                >\n                  <Input\n                    onChange={e => setAddress(e.currentTarget.value)}\n                    placeholder=\"ETH Address 0x0...\"\n                  />\n                </Flex>\n                <Flex mt={2}>\n                  <Button sx={{ bg: 'green' }} onClick={onTransferClick} variant=\"quartiary\">\n                    Confirm\n                  </Button>\n                  <Button\n                    sx={{ bg: 'red' }}\n                    ml={2}\n                    onClick={() => setTransfer(false)}\n                    variant=\"quartiary\"\n                  >\n                    Cancel\n                  </Button>\n                </Flex>\n              </Box>\n            )}\n            {onSaleActive && (\n              <Box sx={{ width: '100%' }}>\n                <Flex\n                  onSubmit={onTransferClick}\n                  sx={{ width: '100%', flexDirection: 'column' }}\n                  as=\"form\"\n                >\n                  <Input\n                    onChange={e => setPrice(e.currentTarget.value)}\n                    placeholder=\"Token Price in ETH\"\n                  />\n                </Flex>\n                <Flex mt={2}>\n                  <Button sx={{ bg: 'green' }} onClick={onSaleClick} variant=\"quartiary\">\n                    Confirm\n                  </Button>\n                  <Button\n                    sx={{ bg: 'red' }}\n                    ml={2}\n                    onClick={() => setOnSale(false)}\n                    variant=\"quartiary\"\n                  >\n                    Cancel\n                  </Button>\n                </Flex>\n              </Box>\n            )}\n            {!transfer && !onSaleActive && (\n              <Flex sx={{ flexDirection: 'column', width: '100%', justifyContent: 'center' }}>\n                <Button onClick={() => setTransfer(!transfer)} variant=\"tertiary\">\n                  Transfer\n                </Button>\n                {isOnSale ? (\n                  <Button\n                    mt={2}\n                    onClick={() =>\n                      onSale &&\n                      onSale({\n                        id: token.id,\n                        price: token.price,\n                        onSale: false,\n                      })\n                    }\n                    variant=\"tertiary\"\n                  >\n                    Remove from Sale\n                  </Button>\n                ) : (\n                  <Button mt={2} onClick={() => setOnSale(!onSaleActive)} variant=\"tertiary\">\n                    Put Token for Sale\n                  </Button>\n                )}\n              </Flex>\n            )}\n          </Flex>\n        )}\n        {onBuy && (\n          <Flex mt={3} sx={{ justifyContent: 'center', width: '100%' }}>\n            <Button\n              sx={{\n                opacity: !!user?.ownedTokens.find(\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\n                )\n                  ? 0.5\n                  : 1,\n                pointerEvents: !!user?.ownedTokens.find(\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\n                )\n                  ? 'none'\n                  : 'visible',\n              }}\n              onClick={onBuyClick}\n              variant=\"quartiary\"\n            >\n              Buy Token\n            </Button>\n          </Flex>\n        )}\n      </Box>\n    </Card>\n  )\n}\n\nexport default Token\n","import { useHistory } from 'react-router'\nimport { Flex, Heading, Image } from 'theme-ui'\nimport { UserMenu } from '..'\n\nexport type HeaderProps = {\n  //\n}\n\nconst Header = () => {\n  const history = useHistory()\n  return (\n    <Flex sx={{ alignItems: 'center', bg: 'black', p: 3 }} as=\"nav\">\n      <Image\n        onClick={() => {\n          history.push('/')\n        }}\n        sx={{ width: 50, cursor: 'pointer' }}\n        src=\"/static/logo.png\"\n      />\n      <Heading sx={{ ml: 2, color: 'white' }} as=\"h4\">\n        ERC721 Marketplace + OpenSea.io on Rinkeby Network\n      </Heading>\n      <UserMenu />\n    </Flex>\n  )\n}\n\nexport default Header\n","import { utils } from 'ethers'\nimport { ActionProps } from '.'\nimport { ActionType } from '../state'\nimport listTokensFrom from '../utils/listTokensFrom'\n\ntype Props = ActionProps<{\n  userAccount: string\n  contract: any\n}>\n\nconst updateUser = async ({ contract, userAccount, library, dispatch }: Props) => {\n  try {\n    const balance = utils.formatEther(await library.getBalance(userAccount))\n    const ownedTokens = await listTokensFrom(contract, userAccount)\n\n    dispatch({\n      type: ActionType.UPDATE_USER,\n      payload: {\n        address: userAccount,\n        balance,\n        ownedTokens,\n      },\n    })\n  } catch (e) {\n    console.log(e)\n    throw new Error(e)\n  }\n}\n\nexport default updateUser\n","import { ActionProps } from '.'\nimport NFTT from '@fluuuid/nft-contracts/build/contracts/NFTT.json'\nimport { Contract } from 'ethers'\nimport { ActionType } from '../state'\n\ntype Props = ActionProps<{\n  chainId: number\n}>\n\nconst getContract = async ({ dispatch, library, chainId }: Props) => {\n  if (!library) throw new Error('No Web3 Found')\n\n  const networkid = (id: number) => {\n    switch (id) {\n      case 1337:\n        return 5777\n      default:\n        return id\n    }\n  }\n\n  try {\n    const deployedNetwork = NFTT.networks[String(networkid(chainId)) as keyof typeof NFTT.networks]\n\n    if (!deployedNetwork) {\n      throw new Error('The network you selected is no supported yet.')\n    }\n\n    const { address } = deployedNetwork\n    const contract = new Contract(address, NFTT.abi, library.getSigner())\n\n    const name = await contract.name()\n    const symbol = await contract.symbol()\n\n    dispatch({\n      type: ActionType.CONTRACT,\n      payload: {\n        payload: contract,\n        details: {\n          address,\n          name,\n          symbol,\n        },\n      },\n    })\n\n    return contract\n  } catch (e) {\n    console.log(e)\n    throw new Error(e)\n  }\n}\n\nexport default getContract\n","import { ActionProps } from '.'\nimport { TokenProps } from '../components/Token'\nimport { ActionType } from '../state'\n\ntype Props = ActionProps<{\n  contract: any\n}>\n\nconst updateTokensOnSale = async ({ contract, dispatch }: Props) => {\n  try {\n    const tokensForSale = (await contract.getAllOnSale()).reduce((acc: TokenProps[], b: any) => {\n      if (b.uri !== '') {\n        acc.push({ id: b.id, price: b.price, name: b.name, uri: b.uri })\n      }\n\n      return acc\n    }, [] as TokenProps[])\n\n    dispatch({ type: ActionType.LOAD_TOKEN_SALE, payload: tokensForSale })\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport default updateTokensOnSale\n","import { useWeb3React } from '@web3-react/core'\nimport { utils, BigNumber } from 'ethers'\nimport { Text, Box, Heading, Grid, Divider } from 'theme-ui'\nimport { Token } from '..'\nimport { updateTokensOnSale, updateUser } from '../../actions'\nimport { useStateContext } from '../../state'\n\nexport type ProfileProps = {}\n\nconst Profile = () => {\n  const { state, dispatch } = useStateContext()\n  const { contract, user, tokensOnSale } = state\n  const { library } = useWeb3React()\n\n  if (!user) return null\n\n  const { address, balance, ownedTokens } = user\n\n  const onConfirmTransfer = async (): Promise<boolean> => {\n    if (!user || !user.address || !library) return false\n    try {\n      await updateUser({\n        contract: contract?.payload,\n        userAccount: user.address,\n        library,\n        dispatch,\n      })\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  const onTransferToken = async ({\n    id,\n    address,\n  }: {\n    id: string\n    address: string\n  }): Promise<boolean> => {\n    if (!contract?.payload) return false\n\n    try {\n      const tx = await contract.payload['safeTransferFrom(address,address,uint256)'](\n        user.address,\n        address,\n        id,\n        {\n          from: user.address,\n        }\n      )\n      const receipt = await tx.wait()\n      if (receipt.confirmations >= 1) {\n        return onConfirmTransfer()\n      } else {\n        return false\n      }\n    } catch (e) {\n      console.log(e)\n      return false\n    }\n  }\n\n  const onSaleToken = async ({\n    id,\n    price,\n    onSale = true,\n  }: {\n    id: string\n    price: BigNumber\n    onSale?: boolean\n  }): Promise<boolean> => {\n    if (!contract?.payload || !user?.address) return false\n    try {\n      await contract.payload.setTokenSale(id, onSale, price, { from: user.address })\n      await updateTokensOnSale({ dispatch, contract: contract?.payload })\n      return await onConfirmTransfer()\n    } catch (e) {\n      console.log(e)\n      return false\n    }\n  }\n\n  return (\n    <Box>\n      <Heading as=\"h1\">My Profile</Heading>\n      <Grid columns=\"1fr 1fr\" sx={{ gap: '0 20px' }}>\n        <Heading as=\"h4\" sx={{ color: 'green' }}>\n          Address\n        </Heading>\n        <Heading as=\"h4\" sx={{ color: 'green' }}>\n          Balance\n        </Heading>\n        <Text>{address}</Text>\n        <Text>Ξ {balance}</Text>\n      </Grid>\n      <Divider variant=\"divider.nft\" sx={{ my: 7 }} />\n      <Box my={5}>\n        {ownedTokens && ownedTokens.length > 0 ? (\n          <Box>\n            <Heading as=\"h2\">\n              My items{' '}\n              <Text variant=\"text.body\" as=\"span\">\n                ({ownedTokens.length} item)\n              </Text>\n            </Heading>\n            <Grid gap={4} columns=\"1fr 1fr 1fr\">\n              {ownedTokens.map((t, index) => (\n                <Token\n                  isOnSale={\n                    !!tokensOnSale?.find(a => utils.formatUnits(a.id) === utils.formatUnits(t.id))\n                  }\n                  onSale={onSaleToken}\n                  onTransfer={onTransferToken}\n                  token={t}\n                  key={index}\n                />\n              ))}\n            </Grid>\n          </Box>\n        ) : (\n          ownedTokens && (\n            <Box>\n              <Heading as=\"h2\">You don't own any NFT tokens</Heading>\n            </Box>\n          )\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nexport default Profile\n","import { useWeb3React } from '@web3-react/core'\nimport { BigNumber } from 'ethers'\nimport { useCallback, useEffect } from 'react'\nimport { Box, Grid, Heading } from 'theme-ui'\nimport { updateTokensOnSale, updateUser } from '../../actions'\nimport { useStateContext } from '../../state'\nimport { Token } from '..'\n\nexport type GalleryProps = {}\n\nconst Gallery = () => {\n  const { state, dispatch } = useStateContext()\n  const { library } = useWeb3React()\n  const { contract, user, tokensOnSale } = state\n\n  const onConfirmTransfer = async () => {\n    if (!user || !user.address) return\n    await updateUser({ contract: contract?.payload, userAccount: user.address, library, dispatch })\n  }\n\n  const onBuyToken = async ({ id, price }: { id: string; price: BigNumber }) => {\n    if (!contract?.payload) return\n\n    try {\n      const tx = await contract.payload.purchaseToken(id, { value: price })\n      const receipt = await tx.wait()\n      if (receipt.confirmations >= 1) {\n        onConfirmTransfer()\n      } else {\n        throw new Error(receipt)\n      }\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n\n  const loadTokensForSale = useCallback(async () => {\n    if (!dispatch || !contract?.payload) return\n    updateTokensOnSale({ dispatch, contract: contract.payload })\n  }, [dispatch, contract])\n\n  const onBuyTokenClick = ({ id, price }: { id: string; price: BigNumber }) => {\n    onBuyToken && onBuyToken({ id, price })\n  }\n\n  useEffect(() => {\n    loadTokensForSale()\n  }, [loadTokensForSale, user?.ownedTokens])\n\n  return (\n    <Box>\n      <Heading as=\"h1\">Market</Heading>\n      <Grid gap={4} columns=\"1fr 1fr 1fr 1fr\">\n        {tokensOnSale?.map((i, index) => (\n          <Token onBuy={onBuyTokenClick} token={i} key={index} />\n        ))}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Gallery\n","import { Flex, Heading, Box } from 'theme-ui'\nimport { useHistory } from 'react-router'\nimport { EtherSymbol } from '@ethersproject/constants'\nimport { useStateContext } from '../../state'\nimport { Identicon } from '..'\nimport { toShort } from '../../utils'\n\nexport type UserMenuProps = {\n  //\n}\n\nconst UserMenu = () => {\n  const {\n    state: { user, isAuthenticated },\n  } = useStateContext()\n\n  const history = useHistory()\n\n  return (\n    <Flex sx={{ ml: 'auto', justifySelf: 'flex-end' }}>\n      {isAuthenticated && user && (\n        <>\n          <Box>\n            <Heading sx={{ p: 0, color: 'white' }} as=\"h4\">\n              {toShort(user.address)}\n            </Heading>\n            <Heading sx={{ p: 0, mt: 1, textAlign: 'right', color: 'white' }} as=\"h5\">\n              {EtherSymbol}\n              {user.balance}\n            </Heading>\n          </Box>\n          <Box\n            onClick={() => {\n              history.push('/profile')\n            }}\n            sx={{\n              cursor: 'pointer',\n              ml: 3,\n              height: 30,\n              width: 30,\n              borderRadius: '100%',\n            }}\n          >\n            <Identicon size={30} address={user.address} />\n          </Box>\n        </>\n      )}\n    </Flex>\n  )\n}\n\nexport default UserMenu\n","import { ElementType } from 'react'\nimport { Redirect } from 'react-router'\nimport { Route } from 'react-router-dom'\nimport { useStateContext } from '../../state'\n\ntype PrivateRouteProps = {\n  component: ElementType\n  path: string\n}\n\nconst PrivateRoute = ({ component: Component, path }: PrivateRouteProps) => {\n  const {\n    state: { isAuthenticated },\n  } = useStateContext()\n\n  return (\n    <Route\n      path={path}\n      render={props => (isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />)}\n    />\n  )\n}\n\nexport default PrivateRoute\n","import { useEffect, useRef } from 'react'\nimport { Flex } from 'theme-ui'\nimport jazzicon from 'jazzicon'\n\nexport type IdenticonProps = {\n  address: string\n  size?: number\n}\n\nconst Identicon = ({ address, size = 16 }: IdenticonProps) => {\n  const ref = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    if (!ref.current) return\n    try {\n      ref.current.innerHTML = ''\n      ref.current.appendChild(jazzicon(size, parseInt(address.slice(2, 10), 16)))\n    } catch (e) {\n      console.log(e)\n    }\n  }, [address, size])\n\n  return (\n    <Flex\n      ref={ref}\n      sx={{\n        justifyContent: 'center',\n        width: size + 2,\n      }}\n    />\n  )\n}\n\nexport default Identicon\n","import { Container, Flex, Button, Spinner, Image } from 'theme-ui'\nimport { useWeb3React } from '@web3-react/core'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nimport { Gallery } from '../components'\nimport { ActionType, useStateContext } from '../state'\nimport { connectorsByName } from '../connectors'\n\nconst App = () => {\n  const {\n    dispatch,\n    state: { user, activatingConnector },\n  } = useStateContext()\n  const { connector, activate } = useWeb3React()\n\n  return (\n    <Container>\n      {!user ? (\n        <>\n          <Flex sx={{ justifyContent: 'center' }}>\n            {Object.keys(connectorsByName).map((name: string) => {\n              const currentConnector = connectorsByName[name as keyof typeof connectorsByName]\n              const activating = currentConnector === activatingConnector\n              const connected = currentConnector === connector\n\n              return (\n                <Button\n                  mt={2}\n                  variant=\"connect\"\n                  sx={{\n                    borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n                    position: 'relative',\n                    maxWidth: 250,\n                  }}\n                  key={name}\n                  onClick={() => {\n                    dispatch({ type: ActionType.SET_CONNECTOR, payload: currentConnector })\n                    activate(\n                      connectorsByName[name as keyof typeof connectorsByName] as AbstractConnector\n                    )\n                  }}\n                >\n                  {currentConnector === connectorsByName.Metamask && (\n                    <Image\n                      sx={{ width: 35, height: 35 }}\n                      mr={3}\n                      src=\"https://docs.metamask.io/metamask-fox.svg\"\n                    />\n                  )}\n                  {name}\n                  {activating && <Spinner size={20} color=\"white\" sx={{ ml: 3 }} />}\n                </Button>\n              )\n            })}\n          </Flex>\n        </>\n      ) : (\n        <Gallery />\n      )}\n    </Container>\n  )\n}\n\nexport default App\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport { App, Profile, Connect } from './'\nimport { Header, PrivateRoute } from '../components'\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 12000\n  return library\n}\n\nconst Root = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <Connect>\n          <Switch>\n            <PrivateRoute path=\"/profile\" component={Profile} />\n            <Route exact path=\"/\" component={App} />\n          </Switch>\n        </Connect>\n      </Web3ReactProvider>\n    </Router>\n  )\n}\n\nexport default Root\n","import { Container } from 'theme-ui'\nimport { Profile } from '../components'\n\nconst ProfilePage = () => {\n  return (\n    <Container>\n      <Profile />\n    </Container>\n  )\n}\n\nexport default ProfilePage\n","import { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\n\nimport { FC, useEffect } from 'react'\nimport { Text, Container, Heading } from 'theme-ui'\nimport useSWR from 'swr'\nimport { getContract, updateUser } from '../actions'\nimport { useEagerConnect, useInactiveListener } from '../hooks/web3'\nimport { ActionType, useStateContext } from '../state'\nimport { ETHSCAN_API } from '../utils'\nimport { fetcherETHUSD } from '../utils/fetchers'\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected ||\n    error instanceof UserRejectedRequestErrorWalletConnect\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nconst Connect: FC = ({ children }) => {\n  const {\n    dispatch,\n    state: { activatingConnector },\n  } = useStateContext()\n  const { connector, library, chainId, account, error } = useWeb3React()\n\n  const { data: ethPrice } = useSWR(ETHSCAN_API, fetcherETHUSD)\n\n  useEffect(() => {\n    dispatch({ type: ActionType.ETH_PRICE, payload: ethPrice })\n  }, [ethPrice, dispatch])\n\n  useEffect(() => {\n    if (!chainId || !account || !library) return\n\n    const update = async () => {\n      try {\n        const contract = await getContract({ dispatch, library, chainId })\n        await updateUser({ contract, userAccount: account, library, dispatch })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    update()\n  }, [chainId, account, library, dispatch])\n\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      dispatch({ type: ActionType.SET_CONNECTOR, payload: undefined })\n    }\n  }, [activatingConnector, connector, dispatch])\n\n  const triedEager = useEagerConnect()\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n    <>\n      {error ? (\n        <Container>\n          <Heading as=\"h2\">❌ Something is not right</Heading>\n          <Text sx={{ mt: 3 }}>{getErrorMessage(error)}</Text>\n        </Container>\n      ) : (\n        children\n      )}\n    </>\n  )\n}\n\nexport default Connect\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate])\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\n// type OnChangeProps = {\n//   account?: string\n//   chainId?: string | number\n// }\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error } = useWeb3React()\n\n  useEffect(() => {\n    const { ethereum } = window as any\n\n    if (ethereum) ethereum.autoRefreshOnNetworkChange = true\n\n    // if (ethereum && ethereum.on && !active && !error && !suppress) {\n    //   const handleConnect = () => {\n    //     console.log(\"!!!!! Handling 'connect' event\")\n    //     activate(injected)\n    //   }\n    //   const handleChainChanged = (chainId: string | number) => {\n    //     console.log(\"11111 Handling 'chainChanged' event with payload\", chainId)\n    //     activate(injected)\n    //   }\n    //   const handleAccountsChanged = (accounts: string[]) => {\n    //     console.log(\"11111 Handling 'accountsChanged' event with payload\", accounts)\n    //     if (accounts.length > 0) {\n    //       activate(injected)\n    //     }\n    //   }\n    //   const handleNetworkChanged = (networkId: string | number) => {\n    //     console.log(\"11111 Handling 'networkChanged' event with payload\", networkId)\n    //     activate(injected)\n    //   }\n\n    //   ethereum.on('connect', handleConnect)\n    //   ethereum.on('chainChanged', handleChainChanged)\n    //   ethereum.on('accountsChanged', handleAccountsChanged)\n    //   ethereum.on('networkChanged', handleNetworkChanged)\n\n    //   return () => {\n    //     if (ethereum.removeListener) {\n    //       ethereum.removeListener('connect', handleConnect)\n    //       ethereum.removeListener('chainChanged', handleChainChanged)\n    //       ethereum.removeListener('accountsChanged', handleAccountsChanged)\n    //       ethereum.removeListener('networkChanged', handleNetworkChanged)\n    //     }\n    //   }\n    // }\n  }, [active, error, suppress])\n}\n","import { SxProp, Theme } from 'theme-ui'\n\nconst defaultButton = {\n  border: 0,\n  fontFamily: 'body',\n  fontWeight: 'normal',\n  lineHeight: 'body',\n  fontSize: 2,\n  paddingX: 3,\n  paddingY: 2,\n  outline: 'none',\n  whiteSpace: 'nowrap',\n  cursor: 'pointer',\n  transition: 'all 0.1s ease-out',\n  '&:hover': {\n    opacity: 0.7,\n  },\n} as SxProp\n\nexport const Palette = {\n  text: '#FFF',\n  white: '#fff',\n  background: '#333',\n  primary: '#111',\n  secondary: '#333',\n  gray: '#F7F9FA',\n  lightGray: '#e0e0e0',\n  midGray: '#333',\n  lightBlue: '#EFF7FF',\n  navy: '#e0e0e0',\n  green: 'rgb(99, 255, 203)',\n  amber: '#D58408',\n  red: '#999',\n  muted: '#999',\n  transparent: 'transparent',\n  white20: 'rgba(255, 255, 255, .2)',\n  black66: 'rgba(0, 0, 0, .66)',\n}\n\nexport type PaletteKeys = keyof typeof Palette\n\nexport const Sizes = {\n  header: 60,\n  container: 1020,\n  button: 250,\n  logo: 60,\n  sidemenu: 240,\n  chart: 950,\n}\n\nexport default {\n  breakpoints: ['40em', '52em', '64em'],\n  space: [0, 4, 10, 16, 20, 30, 42, 56, 78, 125, 150],\n  fontSizes: [10, 12, 16, 26, 36, 50, 75],\n  fonts: {\n    body:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    heading: 'inherit',\n  },\n  layout: {\n    container: {\n      py: 4,\n      px: 3,\n      pb: 10,\n    },\n  },\n  sizes: {\n    ...Sizes,\n  },\n  cards: {\n    nft: {\n      bg: 'background',\n      border: '1px solid',\n      borderColor: 'muted',\n      textAlign: 'left',\n    },\n  },\n  links: {\n    openSea: {\n      color: 'green',\n      fontSize: 1,\n      opacity: 0.5,\n      '&:after': {\n        content: `url(\"data:image/svg+xml,%3Csvg width='8' height='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.262 0l2.529 2.524L0 6.314 1.685 8l3.79-3.79L8 6.732V0z' fill='rgb(99, 255, 203)' fill-rule='nonzero' /%3E%3C/svg%3E\")`,\n        ml: 1,\n      },\n      transition: 'all .2s ease-out',\n      '&:hover': {\n        filter: 'brightness(1.2)',\n        color: 'green',\n      },\n    },\n  },\n  buttons: {\n    primary: {\n      ...defaultButton,\n      fontWeight: 'bold',\n      minWidth: 'button',\n      bg: 'primary',\n      color: 'white',\n      textAlign: 'center',\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n\n    secondary: {\n      cursor: 'pointer',\n      variant: 'buttons.primary',\n      bg: 'secondary',\n      fontWeight: 'body',\n    },\n    tertiary: {\n      variant: 'buttons.secondary',\n      color: 'white',\n      bg: 'primary',\n    },\n    quartiary: {\n      variant: 'buttons.tertiary',\n      bg: 'green',\n      color: 'black',\n      minWidth: 'auto',\n      py: 2,\n    },\n    connect: {\n      variant: 'buttons.tertiary',\n      py: 4,\n      px: 5,\n    },\n  },\n  fontWeights: {\n    heading: 300,\n    body: 400,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.333333333,\n    heading: 1.066666667,\n    subheading: 2,\n  },\n  colors: {\n    ...Palette,\n  },\n  divider: {\n    nft: {\n      color: 'muted',\n      height: 1,\n      my: 2,\n    },\n  },\n  forms: {\n    input: {\n      paddingX: 2,\n      paddingY: 2,\n      borderRadius: '5px',\n      bg: 'white',\n      color: 'primary',\n    },\n  },\n  text: {\n    body: {\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 'body',\n      fontSize: 1,\n    },\n    heading: {\n      py: 2,\n    },\n    bold: {\n      fontWeight: 'bold',\n    },\n    paragraph: {\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 2,\n      fontSize: 2,\n      letterSpacing: 0.44,\n      color: 'white',\n    },\n    h1: {\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 6,\n      letterSpacing: -0.44,\n    },\n    h2: {\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 5,\n      letterSpacing: -0.44,\n    },\n    h3: {\n      fontFamily: 'heading',\n      lineHeight: 'subheading',\n      fontWeight: 'heading',\n      fontSize: 3,\n    },\n    h4: {\n      fontFamily: 'heading',\n      lineHeight: 'subheading',\n      fontWeight: 'bold',\n      fontSize: 2,\n    },\n    h5: {\n      fontFamily: 'heading',\n      fontWeight: 'bold',\n      lineHeight: 1.6,\n      fontSize: 0,\n      letterSpacing: 1.5,\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n    },\n    a: {\n      color: 'primary',\n      '&:hover': {\n        color: 'inherit',\n      },\n    },\n    hr: {\n      height: 1,\n      opacity: 0.5,\n      bg: 'black',\n      color: 'black',\n      my: 6,\n    },\n  },\n} as Theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'theme-ui'\nimport reportWebVitals from './reportWebVitals'\nimport { Root } from './layout'\nimport { StateProvider } from './state/state'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <StateProvider>\n        <Root />\n      </StateProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}